<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bb.emaildemo.dao.UserinfoMapper">
  <resultMap id="BaseResultMap" type="com.bb.emaildemo.model.Userinfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="info_id" jdbcType="INTEGER" property="infoId" />
    <result column="info_remark" jdbcType="VARCHAR" property="infoRemark" />
    <result column="info_headimg" jdbcType="VARCHAR" property="infoHeadimg" />
    <result column="info_sign" jdbcType="VARCHAR" property="infoSign" />
    <result column="info_sex" jdbcType="CHAR" property="infoSex" />
    <result column="info_user" jdbcType="INTEGER" property="infoUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    info_id, info_remark, info_headimg, info_sign, info_sex, info_user
  </sql>
  <select id="selectByExample" parameterType="com.bb.emaildemo.model.UserinfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where info_id = #{infoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from userinfo
    where info_id = #{infoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bb.emaildemo.model.UserinfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bb.emaildemo.model.Userinfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="infoId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into userinfo (info_remark, info_headimg, info_sign, 
      info_sex, info_user)
    values (#{infoRemark,jdbcType=VARCHAR}, #{infoHeadimg,jdbcType=VARCHAR}, #{infoSign,jdbcType=VARCHAR}, 
      #{infoSex,jdbcType=CHAR}, #{infoUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bb.emaildemo.model.Userinfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="infoId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="infoRemark != null">
        info_remark,
      </if>
      <if test="infoHeadimg != null">
        info_headimg,
      </if>
      <if test="infoSign != null">
        info_sign,
      </if>
      <if test="infoSex != null">
        info_sex,
      </if>
      <if test="infoUser != null">
        info_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="infoRemark != null">
        #{infoRemark,jdbcType=VARCHAR},
      </if>
      <if test="infoHeadimg != null">
        #{infoHeadimg,jdbcType=VARCHAR},
      </if>
      <if test="infoSign != null">
        #{infoSign,jdbcType=VARCHAR},
      </if>
      <if test="infoSex != null">
        #{infoSex,jdbcType=CHAR},
      </if>
      <if test="infoUser != null">
        #{infoUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bb.emaildemo.model.UserinfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update userinfo
    <set>
      <if test="record.infoId != null">
        info_id = #{record.infoId,jdbcType=INTEGER},
      </if>
      <if test="record.infoRemark != null">
        info_remark = #{record.infoRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.infoHeadimg != null">
        info_headimg = #{record.infoHeadimg,jdbcType=VARCHAR},
      </if>
      <if test="record.infoSign != null">
        info_sign = #{record.infoSign,jdbcType=VARCHAR},
      </if>
      <if test="record.infoSex != null">
        info_sex = #{record.infoSex,jdbcType=CHAR},
      </if>
      <if test="record.infoUser != null">
        info_user = #{record.infoUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update userinfo
    set info_id = #{record.infoId,jdbcType=INTEGER},
      info_remark = #{record.infoRemark,jdbcType=VARCHAR},
      info_headimg = #{record.infoHeadimg,jdbcType=VARCHAR},
      info_sign = #{record.infoSign,jdbcType=VARCHAR},
      info_sex = #{record.infoSex,jdbcType=CHAR},
      info_user = #{record.infoUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bb.emaildemo.model.Userinfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update userinfo
    <set>
      <if test="infoRemark != null">
        info_remark = #{infoRemark,jdbcType=VARCHAR},
      </if>
      <if test="infoHeadimg != null">
        info_headimg = #{infoHeadimg,jdbcType=VARCHAR},
      </if>
      <if test="infoSign != null">
        info_sign = #{infoSign,jdbcType=VARCHAR},
      </if>
      <if test="infoSex != null">
        info_sex = #{infoSex,jdbcType=CHAR},
      </if>
      <if test="infoUser != null">
        info_user = #{infoUser,jdbcType=INTEGER},
      </if>
    </set>
    where info_id = #{infoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bb.emaildemo.model.Userinfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update userinfo
    set info_remark = #{infoRemark,jdbcType=VARCHAR},
      info_headimg = #{infoHeadimg,jdbcType=VARCHAR},
      info_sign = #{infoSign,jdbcType=VARCHAR},
      info_sex = #{infoSex,jdbcType=CHAR},
      info_user = #{infoUser,jdbcType=INTEGER}
    where info_id = #{infoId,jdbcType=INTEGER}
  </update>
</mapper>